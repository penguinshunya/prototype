import { memo } from "react";
import ArticleContent from "../../../../molecules/article-content";
import P from "../../../../atoms/p";
import { Divider } from "@mui/material";
import Latex from "../../../../atoms/latex";

interface Props {}

export const Article20211224: React.VFC<Props> = memo(() => {
  return (
    <ArticleContent>
      <P>
        やっぱり僕は文章が書けない。書いては消してを繰り返し、結局は何も書かずに終わる。今書いている文章も数分後には消してしまっているかもしれない。できれば今書いている文章は残したい。
      </P>
      <Divider />
      <P>
        僕はこれまで様々なブログを開設してきたが、どれも中途半端なところで途切れている。その原因は環境だと思う。あまりないことだけど、ブログサービスは突然終了することがある。長年書いてきた記事が突然削除されてしまうのは怖いというのが原因のひとつだと思う。
      </P>
      <P>
        自由度が低いことも原因として考えられる。ブログの記事には様々な種類がある。たとえば競プロの解説記事であったり、TypeScriptコードの説明であったり。時には小さなプログラムをそのまま掲載したいこともある。これらの要望を全て満たすようなブログサービスはおそらく存在しない。とはいうものの、WordPressのようなブログサービスにはプラグインという仕組みがあり、その仕組を使うことで、これらの要望のほぼ全てを満たせるだろう。もし欲しいプラグインがなくても、自分でプラグインを開発することができる。
      </P>
      <P>
        しかし、こうしてできたブログは、様々なプラグインが組み込まれたものになってしまう。その中には、相互に影響し合うようなプラグインの組み合わせも存在するだろう。他のプラグインから独立するように設計されていればまだ良いが、導入するすべてのプラグインがそうとは限らない。そして、コードからそれを判定するのは難しい。よって、結局はレビューや星の数などから判断することになる。しかしこれらの情報も信頼できないかもしれない。もしかするとさくらが紛れているかもしれない。
      </P>
      <P>
        そうやって考えていくと、プラグインシステムの存在するブログサービスを利用する意欲がなくなる。最初は運良くプラグインなしで書きたい記事が書けていたとしても、いずれはプラグインが必要になる。プラグインを導入すると、先程述べた問題が発生するかもしれないのでプラグインを入れなくなる。そしてブログの投稿を途絶えさせる。
      </P>
      <P>
        以前の記事でも書いた気がするけれど、React+TypeScript(+VSCode)という環境は、ほぼ僕の理想のブログサービスの形だ。
      </P>
      <P>
        プラグインの代わりにNPMというパッケージ管理システムがある。このシステムが優れているため、パッケージ同士が影響し合うようなことは今のところ経験していない。そしてReactを使うことで、UIのデザインを記事毎に独立させることができる。生のCSSを使う場合はこうはいかないだろう。ある記事だけに適用したいCSSが、他の記事にも影響を与えることがある。
      </P>
      <P>
        TypeScriptとVSCodeの組み合わせも素晴らしい。記事を書いている途中に何らかのTypeScriptプログラムを書きたくなったとき、TypeScriptの型安全性とVSCodeのコード補完が開発を容易にしてくれる。
      </P>
      <P>
        今の環境はほぼ僕の理想なので、ブログの更新を続けられそうだ。
      </P>
      <Divider />
      <P>
        今日は秋葉原に行きたい。ホロライブのクリスマスツリーが飾ってあるので、一度見ておきたい。
      </P>
      <Divider />
      <P>
        <strong>依存するものによって将来は大きく変わる。依存するものを適切に選ぶ必要がある。</strong>
      </P>
      <P>
        身近な例としては住む場所などがある。先程のブログサービスも同じである。依存先をWordPressにすると、それに付随するプラグインシステムにも同時に依存することになる。
      </P>
      <P>
        依存するもの<Latex text="X" />が<Latex text="Y" />に依存するとき、<Latex text="Y" />が信用できないものであれば<Latex text="X" />に依存しないほうが良い。
      </P>
      <P>
        これに則れば、WordPressはプラグインシステムに依存し、プラグインシステムは信用できないため、WordPressは使わないほうが良いという結論になる。
      </P>
      <P>
        Create React AppはNPMとwebpackとTypeScriptとFacebookに依存する。これらはどれも信用できるため、Create React Appも信用できる可能性は高く、依存の障壁は低い。
      </P>
    </ArticleContent>
  );
});

export default Article20211224;
